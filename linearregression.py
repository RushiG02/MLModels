# -*- coding: utf-8 -*-
"""LinearRegression1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e-v87xPushoA2L07uFjzLFMIkQdnF2i0
"""

import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

tymarks = pd.read_csv("aimarks2017.csv")
tymarks.head()
df =pd.DataFrame(tymarks)
print(df.describe())
mse_marks= np.array(df['mse'])
ese_marks=np.array(df['ese'])
x = np.reshape(mse_marks,(-1,1))
y = np.reshape(ese_marks,(-1,1))

regression_model = LinearRegression()
regression_model.fit(x,y)

y_predicted = regression_model.predict(x)




# model evaluation
rmse = mean_squared_error(y, y_predicted)
r2 = r2_score(y, y_predicted)

# printing values
print('Slope:' ,regression_model.coef_)
print('Intercept:', regression_model.intercept_)
print('Root mean squared error: ', rmse)
print('R2 score: ', r2)

# plotting values

# data points
plt.scatter(x, y, s=10)
plt.xlabel('mse_marks')
plt.ylabel('ese_marks')

# predicted values
plt.plot(x, y_predicted, color='r')
plt.show()





